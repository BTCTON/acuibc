package com.acuilab.bc.main.dapp;

import com.acuilab.bc.main.manager.DAppManager;
import com.acuilab.bc.main.ui.WrapLayout;
import java.awt.FlowLayout;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
	dtd = "-//com.acuilab.bc.main.dapp//DAppList//EN",
	autostore = false
)
@TopComponent.Description(
	preferredID = "DAppListTopComponent",
	//iconBase="SET/PATH/TO/ICON/HERE", 
	persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.acuilab.bc.main.dapp.DAppListTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
	displayName = "#CTL_DAppListAction",
	preferredID = "DAppListTopComponent"
)
@Messages({
    "CTL_DAppListAction=DApp列表",
    "CTL_DAppListTopComponent=DApp列表",
    "HINT_DAppListTopComponent=DApp列表"
})
public final class DAppListTopComponent extends TopComponent {

    public DAppListTopComponent() {
	initComponents();
	setName(Bundle.CTL_DAppListTopComponent());
	setToolTipText(Bundle.HINT_DAppListTopComponent());
	putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.FALSE);
	putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.FALSE);
	putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.FALSE);
	putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.FALSE);

	dappListPanel.setLayout(new WrapLayout(FlowLayout.LEFT, 10, 10));
	
	for(IDApp dapp : DAppManager.getDefault().getDAppList()) {
	    dappListPanel.add(new SingleDAppPanel(dapp));
	}
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dappListPanel = new org.jdesktop.swingx.JXPanel();

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        dappListPanel.setScrollableHeightHint(org.jdesktop.swingx.ScrollableSizeHint.PREFERRED_STRETCH);
        dappListPanel.setScrollableWidthHint(org.jdesktop.swingx.ScrollableSizeHint.PREFERRED_STRETCH);

        javax.swing.GroupLayout dappListPanelLayout = new javax.swing.GroupLayout(dappListPanel);
        dappListPanel.setLayout(dappListPanelLayout);
        dappListPanelLayout.setHorizontalGroup(
            dappListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );
        dappListPanelLayout.setVerticalGroup(
            dappListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 262, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(dappListPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXPanel dappListPanel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
	// TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
	// TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
	// better to version settings since initial version as advocated at
	// http://wiki.apidesign.org/wiki/PropertyFiles
	p.setProperty("version", "1.0");
	// TODO store your settings
    }

    void readProperties(java.util.Properties p) {
	String version = p.getProperty("version");
	// TODO read your settings according to their version
    }
}
