package com.acuilab.bc.main.wallet;

import com.acuilab.bc.main.util.AESUtil;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.KeyStroke;
import net.java.balloontip.BalloonTip;
import net.java.balloontip.examples.complete.Utils;
import net.java.balloontip.utils.TimingUtils;
import org.apache.commons.lang3.StringUtils;
import org.openide.util.Exceptions;
import org.openide.util.ImageUtilities;

/**
 *
 * @author admin
 */
public class ExportMnemonicDialog extends javax.swing.JDialog {
    private final String mnemonic;
    
    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    /**
     * Creates new form ImportMnemonicDialog
     * @param parent
     * @param wallet
     * @param password
     */
    public ExportMnemonicDialog(java.awt.Frame parent, Wallet wallet, String mnemonic) {
        super(parent, true);
        initComponents();
        
        this.mnemonic = mnemonic;
        String[] mnemonicWords = StringUtils.split(mnemonic, " ");
        this.mnemonicLbl1.setText(mnemonicWords[0]);
        this.mnemonicLbl2.setText(mnemonicWords[1]);
        this.mnemonicLbl3.setText(mnemonicWords[2]);
        this.mnemonicLbl4.setText(mnemonicWords[3]);
        this.mnemonicLbl5.setText(mnemonicWords[4]);
        this.mnemonicLbl6.setText(mnemonicWords[5]);
        this.mnemonicLbl7.setText(mnemonicWords[6]);
        this.mnemonicLbl8.setText(mnemonicWords[7]);
        this.mnemonicLbl9.setText(mnemonicWords[8]);
        this.mnemonicLbl10.setText(mnemonicWords[9]);
        this.mnemonicLbl11.setText(mnemonicWords[10]);
        this.mnemonicLbl12.setText(mnemonicWords[11]);

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        mnemonicLbl1 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl2 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl3 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl4 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl5 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl6 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl7 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl8 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl9 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl10 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl11 = new org.jdesktop.swingx.JXLabel();
        mnemonicLbl12 = new org.jdesktop.swingx.JXLabel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        copyBtn = new org.jdesktop.swingx.JXButton();

        setTitle(org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.title")); // NOI18N
        setIconImage(ImageUtilities.loadImage("/resource/gourd32.png"));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jXLabel2, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.jXLabel2.text")); // NOI18N

        jXPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jXPanel1.setLayout(new java.awt.GridLayout(4, 3, 10, 10));

        mnemonicLbl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n1-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl1, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl1.text")); // NOI18N
        jXPanel1.add(mnemonicLbl1);

        mnemonicLbl2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n2-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl2, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl2.text")); // NOI18N
        jXPanel1.add(mnemonicLbl2);

        mnemonicLbl3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n3-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl3, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl3.text")); // NOI18N
        jXPanel1.add(mnemonicLbl3);

        mnemonicLbl4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n4-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl4, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl4.text")); // NOI18N
        jXPanel1.add(mnemonicLbl4);

        mnemonicLbl5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n5-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl5, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl5.text")); // NOI18N
        jXPanel1.add(mnemonicLbl5);

        mnemonicLbl6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n6-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl6, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl6.text")); // NOI18N
        jXPanel1.add(mnemonicLbl6);

        mnemonicLbl7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n7-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl7, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl7.text")); // NOI18N
        jXPanel1.add(mnemonicLbl7);

        mnemonicLbl8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n8-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl8, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl8.text")); // NOI18N
        jXPanel1.add(mnemonicLbl8);

        mnemonicLbl9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n9-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl9, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl9.text")); // NOI18N
        jXPanel1.add(mnemonicLbl9);

        mnemonicLbl10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n10-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl10, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl10.text")); // NOI18N
        jXPanel1.add(mnemonicLbl10);

        mnemonicLbl11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n11-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl11, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl11.text")); // NOI18N
        jXPanel1.add(mnemonicLbl11);

        mnemonicLbl12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/n12-32.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(mnemonicLbl12, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.mnemonicLbl12.text")); // NOI18N
        jXPanel1.add(mnemonicLbl12);

        org.openide.awt.Mnemonics.setLocalizedText(jXLabel3, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.jXLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(copyBtn, org.openide.util.NbBundle.getMessage(ExportMnemonicDialog.class, "ExportMnemonicDialog.copyBtn.text")); // NOI18N
        copyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jXLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                    .addComponent(jXPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jXLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(copyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(copyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void copyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyBtnActionPerformed
        Transferable str = new StringSelection(mnemonic);
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(str, null);
        
        // 气泡提示
        try {
            JLabel lbl = new JLabel("复制成功");
            BalloonTip balloonTip = new BalloonTip(copyBtn, 
                            lbl,
                            Utils.createBalloonTipStyle(),
                            Utils.createBalloonTipPositioner(), 
                            null);
            TimingUtils.showTimedBalloon(balloonTip, 2000);
        } catch (Exception ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_copyBtnActionPerformed
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton copyBtn;
    private javax.swing.JPanel jPanel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    private org.jdesktop.swingx.JXLabel mnemonicLbl1;
    private org.jdesktop.swingx.JXLabel mnemonicLbl10;
    private org.jdesktop.swingx.JXLabel mnemonicLbl11;
    private org.jdesktop.swingx.JXLabel mnemonicLbl12;
    private org.jdesktop.swingx.JXLabel mnemonicLbl2;
    private org.jdesktop.swingx.JXLabel mnemonicLbl3;
    private org.jdesktop.swingx.JXLabel mnemonicLbl4;
    private org.jdesktop.swingx.JXLabel mnemonicLbl5;
    private org.jdesktop.swingx.JXLabel mnemonicLbl6;
    private org.jdesktop.swingx.JXLabel mnemonicLbl7;
    private org.jdesktop.swingx.JXLabel mnemonicLbl8;
    private org.jdesktop.swingx.JXLabel mnemonicLbl9;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
